<?xml version = "1.0"?>
<launch>
    <arg name="localization"                                  default="false"/>
    <arg unless="$(arg localization)" name="rtabmap_args"     default="--delete_db_on_start"/>
    <arg name="database_path"                                 default="rtabmap.db"/>
    <arg name="args"                                          default=""/>   
    <arg name="wait_for_transform"                            default="0.2"/> 
    <arg name="controller"                                    default="false"/>

  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="footprint_broadcaster" args="0 0 0 0 0 0 1 odom camera_link" /> -->
  <!-- Navigation stuff (move_base) 
  <include file="$(find turtlebot_navigation)/launch/includes/move_base_rtab.launch.xml"/> -->

  <!-- Mapping -->
    <group ns="rtabmap">
        <node pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
            <remap from="rgb/image"       to="/camera/color/image_raw"/>
            <remap from="depth/image"     to="/camera/depth/image_rect_raw"/>
            <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
            <remap from="rgbd_image"      to="rgbd_image"/>
            <remap from="odom"            to="rgbd_odom"/>
                <param name="frame_id"                    type="string" value="camera_link"/>
                <param name="odom_frame_id"               type="string" value="odom"/>
                <param name="publish_tf"                  type="bool"   value="true"/>
                <param name="ground_truth_frame_id"       type="string" value=""/>
                <param name="ground_truth_base_frame_id"  type="string" value=""/>
                <param name="wait_for_transform"          type="bool"   value="true"/>
                <param name="wait_for_transform_duration" type="double" value="0.2"/>
                <param name="approx_sync"                 type="bool"   value="false"/>
                <param name="config_path"                 type="string" value=""/>
                <param name="queue_size"                  type="int"    value="10"/>
                <param name="subscribe_rgbd"              type="bool"   value="false"/>
                <!-- guess frame id might be useful to use encoder info -->
                <param name="guess_frame_id"              type="string" value=""/>
                <param name="guess_min_translation"       type="double" value="0"/>
                <param name="guess_min_rotation"          type="double" value="0"/>

                <!-- After 20 frames of wich odom was not able to find, reset map. New map is later merged with old one if loopback is found -->
                <param name="Odom/ResetCountdown"         type="int"    value="10"/>
                <param name="Odom/Holonomic" type="bool" value="false"/>
                <param name="Vis/MaxFeatures" type="string" value="1000"/>
                <param name="Reg/Force3DoF"             type="bool" value="true"/>
        </node>


        <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg args)">
            <param name="database_path"       type="string" value="$(arg database_path)"/>

            <param name="frame_id"            type="string" value="camera_link"/>
            <param name="odom_frame_id"       type="string" value="odom"/>
            <param name="map_frame_id"         type="string" value="map"/>
            <param name="wait_for_transform_duration"  type="double"   value="$(arg wait_for_transform)"/>
            <param name="subscribe_depth"     type="bool"   value="true"/>
            <param name="subscribe_scan"      type="bool"   value="false"/>
        
            <!-- inputs -->
            <remap from="rgb/image"       to="/camera/color/image_raw"/>
            <remap from="depth/image"     to="/camera/depth/image_rect_raw"/>
            <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
            <remap from="rgbd_image"      to="rgbd_image"/>
            <remap from="odom"            to="rgbd_odom"/>
        
            <!-- output -->
            <remap from="grid_map" to="/map"/>
        
            <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
            <param name="RGBD/ProximityBySpace"        type="string" value="true"/>   
            <param name="RGBD/OptimizeFromGraphEnd"    type="string" value="false"/>  
            <param name="Kp/MaxDepth"                  type="string" value="4.0"/>
            <param name="Reg/Strategy"                 type="string" value="0"/>       <!-- 0=vis, 1=ICP, 2=both. 0 works best -->
            <param name="Icp/CoprrespondenceRatio"     type="string" value="0.3"/>
            <param name="Vis/MinInliers"               type="string" value="5"/>      
            <param name="Vis/InlierDistance"           type="string" value="0.1"/>    
            <param name="RGBD/AngularUpdate"           type="string" value="0.1"/>    
            <param name="RGBD/LinearUpdate"            type="string" value="0.1"/>    
            <param name="Rtabmap/TimeThr"              type="string" value="700"/>
            <param name="Mem/RehearsalSimilarity"      type="string" value="0.30"/>
            <param name="Optimizer/Slam2D"             type="string" value="true"/>
            <param name="Reg/Force3DoF"                type="string" value="true"/>  

            <!-- localization mode -->
            <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
            <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
            <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/> 
        </node>
    </group>

    <group if="$(arg controller)">
        <group ns="controller">
	        <node name="ps3joy" pkg="ps3joy" type="ps3joy.py" output="screen"/>
        </group>
        <group ns="kobuki">
            <include file="$(find turtlebot_bringup)/launch/minimal.launch" />
            <include file="$(find turtlebot_teleop)/launch/ps3_teleop.launch" />
        </group>
    </group>

    <group unless="$(arg controller)">
        <group ns="kobuki">
            <include file="$(find turtlebot_bringup)/launch/minimal.launch" />
            <include file="$(find turtlebot_teleop)/launch/keyboard_teleop.launch" />
        </group>
    </group>
</launch>